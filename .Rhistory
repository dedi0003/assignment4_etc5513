knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
library(romato)
library(tidyverse)
library(knitr)
library(kableExtra)
melb_top100_filter %>%
mutate(price_range = as.factor(price_range)) %>%
ggplot(aes(reorder(x=price_range, average_cost_for_two),
y = average_cost_for_two,
fill = price_range)) +
geom_boxplot() +
labs(title = "Price Ranges",
x = "Price Range",
y = "Average Cost for Two",
fill = "Price Range")
# pull data for category "Best of Melbourne" using Melbourne ID "259"
melb <- zmt$search(entity_id = "259", entity_type = "city", category = "Best of Melbourne")
zmt <- zomato$new("1623b413d3a1614e765de7578f83a10b") #assign API key
# pull data for category "Best of Melbourne" using Melbourne ID "259"
melb <- zmt$search(entity_id = "259", entity_type = "city", category = "Best of Melbourne")
melb_top100 <- melb %>%
mutate(aggregate_rating = as.numeric(aggregate_rating), price_range = as.numeric(price_range), longitude = as.numeric(longitude), latitude = as.numeric(latitude))
melb_top100
melb_top100_filter <- melb_top100 %>%
select(name, cuisines, average_cost_for_two, price_range, establishment,all_reviews_count, locality, aggregate_rating, rating_text, address) %>%
mutate(establishment = as.character(establishment))
melb_top100_filter %>%
arrange(desc(aggregate_rating)) %>%
head(20)
melb_top100_filter %>%
mutate(price_range = as.factor(price_range)) %>%
ggplot(aes(reorder(x=price_range, average_cost_for_two),
y = average_cost_for_two,
fill = price_range)) +
geom_boxplot() +
labs(title = "Price Ranges",
x = "Price Range",
y = "Average Cost for Two",
fill = "Price Range")
price_range <- melb_top100_filter %>%
group_by(price_range) %>%
summarise(Maximum = max(average_cost_for_two),
Median = median(average_cost_for_two),
Minimum = min(average_cost_for_two),
Range = max(average_cost_for_two)-min(average_cost_for_two))
price_range %>% rename(`Price Range` = price_range) %>%
kable(caption = "Price Ranges") %>%
kable_styling(bootstrap_options = "striped")
melb_top100_filter %>%
mutate(price_range = as.factor(price_range)) %>%
select(name, price_range)%>%
group_by(price_range)%>%
count() %>%
ggplot(aes(x = price_range,
y = n,
fill = price_range)) +
geom_bar(stat = "identity",
colour = "black") +
labs(title = "Price Range Counts",
x = "Price Range",
y = "Count",
fill = "Price Range")
melb_top100_filter %>%
mutate(price_range = as.factor(price_range)) %>%
ggplot(aes(x = price_range, y = aggregate_rating, fill = price_range)) +
geom_boxplot() +
labs(title = "Price Ranges to Aggregate Ratings",
x = "Price Range",
y = "Aggregate Rating",
fill = "Price Range")
melb_top100_filter %>%
select(name, average_cost_for_two,aggregate_rating) %>%
mutate(average_cost_for_two = as.numeric(average_cost_for_two)) %>%
ggplot(aes(x = average_cost_for_two,
y = aggregate_rating)) +
geom_point() +
geom_smooth() +
labs(title = "Average Cost for Two to Aggregate Rating Relationship",
x = "Average Cost for Two",
y = "Aggregate Rating")
rating <- melb_top100_filter %>%
group_by(rating_text) %>%
summarise(Maximum = max(aggregate_rating),
Minimum = min(aggregate_rating))
rating %>%
rename(`Rating Text` = rating_text) %>%
kable(caption = "Rating Ranges") %>%
kable_styling(bootstrap_options = "striped")
melb_top100_filter$rating_text <- factor(melb_top100_filter$rating_text, levels = c("Average", "Good", "Very Good", "Excellent"))
melb_top100_filter %>%
mutate(price_range = as.factor(price_range)) %>%
group_by(price_range, rating_text) %>%
count(na.rm = TRUE) %>%
ggplot(aes(x = rating_text,
y = n,
fill = price_range)) +
geom_bar(position = "dodge", stat = "identity", colour = "black") +
labs(title = "Average Rating Count",
x = "Average Rating",
y = "Count",
fill = "Price Range")
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
citation("tidyvers")
citation("tidyverse")
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
# pull data for category "Best of Melbourne" using Melbourne ID "259"
melb <- zmt$search(entity_id = "259", entity_type = "city", category = "Best of Melbourne")
melb_top100 <- melb %>%
mutate(aggregate_rating = as.numeric(aggregate_rating), price_range = as.numeric(price_range), longitude = as.numeric(longitude), latitude = as.numeric(latitude))
library(romato)
library(tidyverse)
library(knitr)
library(kableExtra)
# pull data for category "Best of Melbourne" using Melbourne ID "259"
melb <- zmt$search(entity_id = "259", entity_type = "city", category = "Best of Melbourne")
melb_top100 <- melb %>%
mutate(aggregate_rating = as.numeric(aggregate_rating), price_range = as.numeric(price_range), longitude = as.numeric(longitude), latitude = as.numeric(latitude))
melb_top100
price_range <- melb_top100_filter %>%
group_by(price_range) %>%
summarise(Maximum = max(average_cost_for_two),
Median = median(average_cost_for_two),
Minimum = min(average_cost_for_two),
Range = max(average_cost_for_two)-min(average_cost_for_two))
price_range %>% rename(`Price Range` = price_range) %>%
kable(caption = "Price Ranges") %>%
kable_styling(bootstrap_options = "striped",
latex_options = "hold_position")
rating %>%
rename(`Rating Text` = rating_text) %>%
kable(caption = "Rating Ranges") %>%
kable_styling(bootstrap_options = "striped",
latex_options = "hold_position")
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE,
fig.align = "centre")
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE,
fig.align = "centre",
fig.width = 8)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
